@page "/"

@using Vds.Data
@using Vds.Services
@using Vds.Pages
@inject IPersonService _service
@inject IJSRuntime jsRuntime

<h1>Person List</h1>

@if (_personList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-lg-8">
            <table class="table">
                <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var person in _personList)
                {
                    <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.Email</td>
                    <td>@person.Status</td>
                    <td>
                    <input type="button" class="btn btn-primary" @onclick="(() => PrepareForEdit(person))" value="Edit" />
                    <input type="button" class="btn btn-danger" @onclick="(() => PrepareForDelete(person))" data-toggle="modal" data-target="#confirmDeleteModal" value="Delete" />
                                                                                                                                                                                </td>
                                                                                                                                                                                </tr>
                }
                </tbody>
            </table>
        </div>
        
        
        <div class="col-lg-4">
            <AddEditPerson DataChanged="@DataChanged" Person=_person />
        </div>
    </div>
}
@*<div>
    <input type="button" data-toggle="modal" data-target="#personModal" class="btn btn-primary" value="Add Person" @onclick="(InitializePerson)" />
</div>*@

<br/>

<div class="card">
    <div class="card-body">
        <p class="text-info">Click Submit to add these people to Stratum</p>
        <input type="button" class="btn btn-lg btn-warning" value="Submit" @onclick="(SubmitListAsync)" disabled="@CannotSubmit"/>
    </div>
</div>

<ConfirmDialog OnClick="@DeleteAsync" />
@*<PersonDetail Person=_person DataChanged="@DataChanged">
    <CustomHeader>@_customHeader</CustomHeader>
</PersonDetail>*@

@code {
    private List<Person> _personList;
    private Person _person = new Person();
    private string _customHeader = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _personList = await _service.GetAll();
    }

    private void InitializePerson()
    {
        _person = new Person();
        _customHeader = "Add Person";
    }

    private void PrepareForEdit(Person person)
    {
        _customHeader = "Edit Person";
        _person = person;
    }

    private void PrepareForDelete(Person person)
    {
        _person = person;
    }

    private async Task DeleteAsync()
    {
        var task = await _service.Delete(_person.Id.Value);
        await jsRuntime.InvokeAsync<object>("CloseModal", "confirmDeleteModal");
        _personList = await _service.GetAll();
        _person = new Person();
    }

    private async void DataChanged()
    {
        _personList = await _service.GetAll();
        StateHasChanged();
    }

    private async Task SubmitListAsync()
    {
        await _service.SubmitList();
        _personList = await _service.GetAll();
        _person = new Person();
    }

    private bool CannotSubmit => _personList == null || !_personList.Any();
}
